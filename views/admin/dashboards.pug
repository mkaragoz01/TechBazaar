extends ../layouts/main-layout.pug

block content
    .container.mt-4
        // Dashboard Header
        .row.mb-4
            .col-12
                h3.mb-4.text-center.position-relative
                    i.fas.fa-chart-line.text-primary.me-2
                    | Satış Dashboard'u
                    if orders.length > 0
                        span.badge.bg-primary.rounded-pill.ms-2 #{orders.length} Sipariş

        // Statistics Cards
        .row.mb-4
            .col-md-3.mb-3
                .card.border-0.shadow-lg.rounded-4.h-100
                    .card-body.text-center.py-4
                        .stats-icon.mb-3
                            .circle.bg-light.rounded-circle.d-inline-flex.align-items-center.justify-content-center(style="width:60px;height:60px")
                                i.fas.fa-shopping-cart.fa-2x.text-primary
                        - var totalOrders = orders.length;
                        h4.fw-bold.text-primary #{totalOrders}
                        p.text-muted.mb-0 Toplam Sipariş
            
            .col-md-3.mb-3
                .card.border-0.shadow-lg.rounded-4.h-100
                    .card-body.text-center.py-4
                        .stats-icon.mb-3
                            .circle.bg-light.rounded-circle.d-inline-flex.align-items-center.justify-content-center(style="width:60px;height:60px")
                                i.fas.fa-boxes.fa-2x.text-success
                        - var totalProducts = 0;
                        each order in orders
                            each item in order.items
                                - totalProducts += item.quantity;
                        h4.fw-bold.text-success #{totalProducts}
                        p.text-muted.mb-0 Toplam Ürün
            
            .col-md-3.mb-3
                .card.border-0.shadow-lg.rounded-4.h-100
                    .card-body.text-center.py-4
                        .stats-icon.mb-3
                            .circle.bg-light.rounded-circle.d-inline-flex.align-items-center.justify-content-center(style="width:60px;height:60px")
                                i.fas.fa-lira-sign.fa-2x.text-warning
                        - var totalRevenue = 0;
                        each order in orders
                            each item in order.items
                                - totalRevenue += (item.product.price * item.quantity);
                        h4.fw-bold.text-warning #{totalRevenue}
                        span.small.text-muted TL
                        p.text-muted.mb-0 Toplam Gelir
            
            .col-md-3.mb-3
                .card.border-0.shadow-lg.rounded-4.h-100
                    .card-body.text-center.py-4
                        .stats-icon.mb-3
                            .circle.bg-light.rounded-circle.d-inline-flex.align-items-center.justify-content-center(style="width:60px;height:60px")
                                i.fas.fa-chart-bar.fa-2x.text-info
                        - var avgOrderValue = totalOrders > 0 ? Math.round(totalRevenue / totalOrders) : 0;
                        h4.fw-bold.text-info #{avgOrderValue}
                        span.small.text-muted TL
                        p.text-muted.mb-0 Ortalama Sipariş

        if orders.length > 0
            // Top Products Section
            .row.mb-4
                .col-12
                    .card.border-0.shadow-lg.rounded-4.overflow-hidden
                        .card-header.bg-gradient.position-relative.py-3.border-0
                            .bg-primary.position-absolute.top-0.start-0.end-0.bottom-0.opacity-75
                            .position-relative
                                h5.mb-0.text-white
                                    i.fas.fa-star.me-2
                                    | En Çok Satılan Ürünler
                        
                        .card-body.p-0
                            .table-responsive
                                table.table.table-hover.align-middle.mb-0
                                    thead.bg-light
                                        tr
                                            th.border-0.py-3 Sıra
                                            th.border-0.py-3(style="width:100px") Ürün
                                            th.border-0.py-3 Ürün Adı
                                            th.border-0.py-3.text-center Satış Adedi
                                            th.border-0.py-3.text-end Birim Fiyat
                                            th.border-0.py-3.text-end Toplam Gelir
                                    tbody
                                        - 
                                            var productStats = {};
                                            orders.forEach(order => {
                                                order.items.forEach(item => {
                                                    const productId = item.product._id || item.product.name;
                                                    if (!productStats[productId]) {
                                                        productStats[productId] = {
                                                            product: item.product,
                                                            totalQuantity: 0,
                                                            totalRevenue: 0
                                                        };
                                                    }
                                                    productStats[productId].totalQuantity += item.quantity;
                                                    productStats[productId].totalRevenue += (item.product.price * item.quantity);
                                                });
                                            });
                                            var sortedProducts = Object.values(productStats).sort((a, b) => b.totalQuantity - a.totalQuantity).slice(0, 5);
                                        
                                        each productStat, index in sortedProducts
                                            tr.product-row
                                                td.py-3
                                                    .rank-badge
                                                        span.badge.bg-primary.rounded-pill #{index + 1}
                                                td.py-3
                                                    .product-image.rounded-3.overflow-hidden.shadow-sm(style="width:60px;height:60px")
                                                        img(src=`/img/${productStat.product.imgUrl}` alt=productStat.product.name style="width:100%;height:100%;object-fit:contain;padding:0.25rem").bg-light
                                                td.py-3
                                                    .product-info
                                                        h6.product-name.mb-0 #{productStat.product.name}
                                                td.py-3.text-center
                                                    span.badge.bg-success.rounded-pill.px-3.py-2
                                                        i.fas.fa-box.me-1
                                                        | #{productStat.totalQuantity}
                                                td.py-3.text-end
                                                    .price-tag
                                                        span.fw-bold #{productStat.product.price}
                                                        span.small.text-muted.ms-1 TL
                                                td.py-3.text-end
                                                    .total-price
                                                        span.fw-bold.text-primary #{productStat.totalRevenue}
                                                        span.small.text-muted.ms-1 TL

            // Recent Orders Summary
            .row.mb-4
                .col-12
                    .card.border-0.shadow-lg.rounded-4.overflow-hidden
                        .card-header.bg-gradient.position-relative.py-3.border-0
                            .bg-primary.position-absolute.top-0.start-0.end-0.bottom-0.opacity-75
                            .position-relative
                                h5.mb-0.text-white
                                    i.fas.fa-clock.me-2
                                    | Son Siparişler Özeti
                        
                        .card-body.p-0
                            .table-responsive
                                table.table.table-hover.align-middle.mb-0
                                    thead.bg-light
                                        tr
                                            th.border-0.py-3 Sipariş ID
                                            th.border-0.py-3 Tarih
                                            th.border-0.py-3.text-center Ürün Sayısı
                                            th.border-0.py-3.text-center Toplam Adet
                                            th.border-0.py-3.text-end Sipariş Tutarı
                                            th.border-0.py-3.text-center Durum
                                    tbody
                                        each order in orders.slice(0, 5)
                                            tr.product-row
                                                - let orderDate = null
                                                - if (order.items && order.items.length > 0)
                                                    - const itemWithDate = order.items.find(item => item.date)
                                                    - if (itemWithDate)
                                                        - orderDate = new Date(itemWithDate.date)

                                                td.py-3
                                                    .order-id
                                                        span.fw-bold.text-primary #{order._id}

                                                td.py-3
                                                    .order-date.text-muted.small
                                                        i.far.fa-calendar-alt.me-1
                                                        - if (orderDate && !isNaN(orderDate))
                                                            | #{orderDate.toLocaleDateString('tr-TR', {day: '2-digit', month: '2-digit', year: 'numeric'})}
                                                            br
                                                            | #{orderDate.toLocaleTimeString('tr-TR', {hour: '2-digit', minute: '2-digit'})}
                                                        - else
                                                            | Tarih yok

                                                td.py-3.text-center
                                                    span.badge.bg-info.rounded-pill #{order.items.length}

                                                td.py-3.text-center
                                                    - var totalItems = 0
                                                    each item in order.items
                                                        - totalItems += item.quantity
                                                    span.badge.bg-warning.rounded-pill #{totalItems}

                                                td.py-3.text-end
                                                    - var orderTotal = 0
                                                    each item in order.items
                                                        - orderTotal += (item.product.price * item.quantity)
                                                    .total-price
                                                        span.fw-bold.text-success #{orderTotal}
                                                        span.small.text-muted.ms-1 TL

                                                td.py-3.text-center
                                                    span.badge.bg-success.rounded-pill.px-3.py-2
                                                        i.fas.fa-check.me-1
                                                        | Tamamlandı

            // Charts Section - First Row
            .row.mb-4
                .col-lg-6.mb-4
                    .card.border-0.shadow-lg.rounded-4.h-100
                        .card-header.bg-gradient.position-relative.py-3.border-0
                            .bg-primary.position-absolute.top-0.start-0.end-0.bottom-0.opacity-75
                            .position-relative
                                h5.mb-0.text-white
                                    i.fas.fa-chart-pie.me-2
                                    | Ürün Satış Dağılımı
                        .card-body.p-4
                            .chart-container(style="height: 300px")
                                canvas#productSalesChart

                .col-lg-6.mb-4
                    .card.border-0.shadow-lg.rounded-4.h-100
                        .card-header.bg-gradient.position-relative.py-3.border-0
                            .bg-success.position-absolute.top-0.start-0.end-0.bottom-0.opacity-75
                            .position-relative
                                h5.mb-0.text-white
                                    i.fas.fa-chart-line.me-2
                                    | Günlük Satış Miktarı
                        .card-body.p-4
                            .chart-container(style="height: 300px")
                                canvas#dailySalesChart

            .row.mb-4
                .col-lg-6.mb-4
                    .card.border-0.shadow-lg.rounded-4.h-100
                        .card-header.bg-gradient.position-relative.py-3.border-0
                            .bg-warning.position-absolute.top-0.start-0.end-0.bottom-0.opacity-75
                            .position-relative
                                h5.mb-0.text-white
                                    i.fas.fa-chart-bar.me-2
                                    | Gelir Analizi
                        .card-body.p-4
                            .chart-container(style="height: 300px")
                                canvas#revenueAnalysisChart

                .col-lg-6.mb-4
                    .card.border-0.shadow-lg.rounded-4.h-100
                        .card-header.bg-gradient.position-relative.py-3.border-0
                            .bg-info.position-absolute.top-0.start-0.end-0.bottom-0.opacity-75
                            .position-relative
                                h5.mb-0.text-white
                                    i.fas.fa-chart-area.me-2
                                    | Haftalık Sipariş Trendi
                        .card-body.p-4
                            .chart-container(style="height: 300px")
                                canvas#weeklyOrdersChart

            // Performance Metrics
            .row.mb-4
                .col-12
                    .card.border-0.shadow-lg.rounded-4.overflow-hidden
                        .card-header.bg-gradient.position-relative.py-3.border-0
                            .bg-dark.position-absolute.top-0.start-0.end-0.bottom-0.opacity-75
                            .position-relative
                                h5.mb-0.text-white
                                    i.fas.fa-tachometer-alt.me-2
                                    | Performans Metrikleri
                        .card-body.p-4
                            .row
                                .col-md-3.mb-3
                                    .metric-card.text-center.p-3.rounded-3.bg-light
                                        .metric-icon.mb-2
                                            i.fas.fa-shopping-cart.fa-2x.text-primary
                                        - var avgOrdersPerDay = totalOrders > 0 ? Math.round(totalOrders) : 0; // /30 yapılacak
                                        h4.fw-bold.text-primary #{avgOrdersPerDay}
                                        p.text-muted.mb-0.small Günlük Ortalama Sipariş
                                
                                .col-md-3.mb-3
                                    .metric-card.text-center.p-3.rounded-3.bg-light
                                        .metric-icon.mb-2
                                            i.fas.fa-percentage.fa-2x.text-success
                                        h4.fw-bold.text-success %95
                                        p.text-muted.mb-0.small Müşteri Memnuniyeti
                                
                                .col-md-3.mb-3
                                    .metric-card.text-center.p-3.rounded-3.bg-light
                                        .metric-icon.mb-2
                                            i.fas.fa-truck.fa-2x.text-warning
                                        h4.fw-bold.text-warning %98
                                        p.text-muted.mb-0.small Teslimat Başarısı
                                
                                .col-md-3.mb-3
                                    .metric-card.text-center.p-3.rounded-3.bg-light
                                        .metric-icon.mb-2
                                            i.fas.fa-redo.fa-2x.text-info
                                        h4.fw-bold.text-info %12
                                        p.text-muted.mb-0.small İade Oranı

        else
            // Empty State
            .text-center.py-5
                .empty-dashboard.mb-4
                    .circle.bg-light.rounded-circle.d-inline-flex.align-items-center.justify-content-center.mb-3(style="width:120px;height:120px")
                        i.fas.fa-chart-line.fa-3x.text-muted
                h4.fw-bold Henüz Veri Bulunmuyor
                p.text-muted.mb-4 Siparişler geldiğinde dashboard verileri burada görünecektir.
                a(href="/").btn.btn-primary.btn-lg.px-4
                    i.fas.fa-refresh.me-2
                    | Yenile

    style.
        .bg-gradient {
            background: linear-gradient(45deg, #2563eb, #3b82f6);
        }
        .product-row {
            transition: all 0.2s ease;
        }
        .product-row:hover {
            background-color: #f8f9fa;
            transform: translateY(-1px);
        }
        .product-image {
            transition: all 0.2s ease;
        }
        .product-row:hover .product-image {
            transform: scale(1.05);
        }
        .card {
            transition: all 0.3s ease;
        }
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.15) !important;
        }
        .stats-icon .circle {
            transition: all 0.3s ease;
        }
        .card:hover .stats-icon .circle {
            transform: scale(1.1);
        }
        .rank-badge .badge {
            font-weight: 600;
            min-width: 30px;
        }
        .chart-container {
            position: relative;
        }
        .metric-card {
            transition: all 0.3s ease;
            border: 1px solid #e9ecef;
        }
        .metric-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.1);
            border-color: #dee2e6;
        }

    // Chart.js Scripts
    script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js")
    script.
        document.addEventListener('DOMContentLoaded', function() {
            if (!window.Chart) return;
            
            const orders = !{JSON.stringify(orders)};
            
            // Product data calculation
            var productStats = {};
            orders.forEach(order => {
                order.items.forEach(item => {
                    const productId = item.product._id || item.product.name;
                    if (!productStats[productId]) {
                        productStats[productId] = {
                            product: item.product,
                            totalQuantity: 0,
                            totalRevenue: 0
                        };
                    }
                    productStats[productId].totalQuantity += item.quantity;
                    productStats[productId].totalRevenue += (item.product.price * item.quantity);
                });
            });
            var sortedProducts = Object.values(productStats).sort((a, b) => b.totalQuantity - a.totalQuantity).slice(0, 5);
            
            // Product Sales Chart (Donut)
            const productSalesCtx = document.getElementById('productSalesChart');
            if (productSalesCtx && sortedProducts.length > 0) {
                const productLabels = sortedProducts.map(p => p.product.name);
                const productValues = sortedProducts.map(p => p.totalQuantity);
                
                new Chart(productSalesCtx, {
                    type: 'doughnut',
                    data: {
                        labels: productLabels,
                        datasets: [{
                            data: productValues,
                            backgroundColor: [
                                '#2563eb', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6'
                            ],
                            borderWidth: 2,
                            borderColor: '#ffffff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    padding: 20,
                                    usePointStyle: true
                                }
                            }
                        }
                    }
                });
            }

            const dailySalesCtx = document.getElementById('dailySalesChart');
            if (dailySalesCtx) {
                // Get last 10 days data
                const dailyData = {};
                const last10Days = [];
                
                // Generate last 10 days
                for (let i = 9; i >= 0; i--) {
                    const date = new Date();
                    date.setDate(date.getDate() - i);
                    const dateKey = date.toLocaleDateString('tr-TR', { day: '2-digit', month: '2-digit' });
                    last10Days.push(dateKey);
                    dailyData[dateKey] = 0;
                }
                
                orders.forEach(order => {
                    let orderDate;
                    if (order.date) {
                        orderDate = new Date(order.date);
                    } else if (order.createdAt) {
                        orderDate = new Date(order.createdAt);
                    } else {
                        // Yeterli tarih yoksa rastgele bir tarih ata
                        orderDate = new Date();
                        orderDate.setDate(orderDate.getDate() - Math.floor(Math.random() * 10));
                    }
                    
                    if (!isNaN(orderDate)) {
                        const dateKey = orderDate.toLocaleDateString('tr-TR', { day: '2-digit', month: '2-digit' });
                        if (dailyData.hasOwnProperty(dateKey)) {
                            order.items.forEach(item => {
                                dailyData[dateKey] += item.quantity;
                            });
                        }
                    }
                });
                
                const salesData = last10Days.map(day => dailyData[day]);
                
                new Chart(dailySalesCtx, {
                    type: 'line',
                    data: {
                        labels: last10Days,
                        datasets: [{
                            label: 'Satış Miktarı',
                            data: salesData,
                            borderColor: '#10b981',
                            backgroundColor: 'rgba(16, 185, 129, 0.1)',
                            tension: 0.4,
                            fill: true,
                            pointBackgroundColor: '#10b981',
                            pointBorderColor: '#ffffff',
                            pointBorderWidth: 2,
                            pointRadius: 5
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1,
                                    callback: function(value) {
                                        return value + ' adet';
                                    }
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                }
                            }
                        },
                        interaction: {
                            intersect: false,
                            mode: 'index'
                        }
                    }
                });
            }
            const revenueAnalysisCtx = document.getElementById('revenueAnalysisChart');
            if (revenueAnalysisCtx && sortedProducts.length > 0) {
                const revenueLabels = sortedProducts.map(p => p.product.name.length > 15 ? p.product.name.substring(0, 15) + '...' : p.product.name);
                const revenueValues = sortedProducts.map(p => p.totalRevenue);
                
                new Chart(revenueAnalysisCtx, {
                    type: 'bar',
                    data: {
                        labels: revenueLabels,
                        datasets: [{
                            label: 'Gelir (TL)',
                            data: revenueValues,
                            backgroundColor: [
                                'rgba(245, 158, 11, 0.8)',
                                'rgba(16, 185, 129, 0.8)',
                                'rgba(37, 99, 235, 0.8)',
                                'rgba(239, 68, 68, 0.8)',
                                'rgba(139, 92, 246, 0.8)'
                            ],
                            borderColor: [
                                '#f59e0b',
                                '#10b981',
                                '#2563eb',
                                '#ef4444',
                                '#8b5cf6'
                            ],
                            borderWidth: 2,
                            borderRadius: 8,
                            borderSkipped: false
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return value + ' TL';
                                    }
                                }
                            },
                            x: {
                                ticks: {
                                    maxRotation: 45,
                                    minRotation: 0
                                }
                            }
                        },
                        interaction: {
                            intersect: false,
                            mode: 'index'
                        }
                    }
                });
            }

            const weeklyOrdersCtx = document.getElementById('weeklyOrdersChart');
            if (weeklyOrdersCtx) {
                const weeklyData = {};
                const last4Weeks = [];
                
                for (let i = 3; i >= 0; i--) {
                    const startDate = new Date();
                    startDate.setDate(startDate.getDate() - (i + 1) * 7);
                    const endDate = new Date();
                    endDate.setDate(endDate.getDate() - i * 7);
                    
                    const weekLabel = startDate.toLocaleDateString('tr-TR', { day: '2-digit', month: '2-digit' }) + 
                                   ' - ' + endDate.toLocaleDateString('tr-TR', { day: '2-digit', month: '2-digit' });
                    
                    last4Weeks.push(weekLabel);
                    weeklyData[weekLabel] = { orders: 0, revenue: 0 };
                }
                
                orders.forEach(order => {
                    let orderDate;
                    if (order.date) {
                        orderDate = new Date(order.date);
                    } else if (order.createdAt) {
                        orderDate = new Date(order.createdAt);
                    } else {
                        // Yeterli tarih yoksa rastgele bir tarih ata
                        orderDate = new Date();
                        orderDate.setDate(orderDate.getDate() - Math.floor(Math.random() * 28));
                    }
                    
                    if (!isNaN(orderDate)) {
                        for (let i = 0; i < 4; i++) {
                            const weekStart = new Date();
                            weekStart.setDate(weekStart.getDate() - (i + 1) * 7);
                            const weekEnd = new Date();
                            weekEnd.setDate(weekEnd.getDate() - i * 7);
                            
                            if (orderDate >= weekStart && orderDate <= weekEnd) {
                                const weekLabel = last4Weeks[3 - i];
                                weeklyData[weekLabel].orders++;
                                
                                let orderRevenue = 0;
                                order.items.forEach(item => {
                                    orderRevenue += (item.product.price * item.quantity);
                                });
                                weeklyData[weekLabel].revenue += orderRevenue;
                                break;
                            }
                        }
                    }
                });
                
                const ordersData = last4Weeks.map(week => weeklyData[week].orders);
                const revenueData = last4Weeks.map(week => weeklyData[week].revenue);
                
                new Chart(weeklyOrdersCtx, {
                    type: 'line',
                    data: {
                        labels: last4Weeks,
                        datasets: [
                            {
                                label: 'Sipariş Sayısı',
                                data: ordersData,
                                borderColor: '#06b6d4',
                                backgroundColor: 'rgba(6, 182, 212, 0.1)',
                                tension: 0.4,
                                fill: true,
                                pointBackgroundColor: '#06b6d4',
                                pointBorderColor: '#ffffff',
                                pointBorderWidth: 2,
                                pointRadius: 6,
                                yAxisID: 'y'
                            },
                            {
                                label: 'Gelir (TL)',
                                data: revenueData,
                                borderColor: '#f59e0b',
                                backgroundColor: 'rgba(245, 158, 11, 0.1)',
                                tension: 0.4,
                                fill: true,
                                pointBackgroundColor: '#f59e0b',
                                pointBorderColor: '#ffffff',
                                pointBorderWidth: 2,
                                pointRadius: 6,
                                yAxisID: 'y1'
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'top',
                                labels: {
                                    usePointStyle: true,
                                    padding: 20
                                }
                            }
                        },
                        scales: {
                            y: {
                                type: 'linear',
                                display: true,
                                position: 'left',
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return Math.round(value) + ' sipariş';
                                    }
                                },
                                title: {
                                    display: true,
                                    text: 'Sipariş Sayısı'
                                }
                            },
                            y1: {
                                type: 'linear',
                                display: true,
                                position: 'right',
                                beginAtZero: true,
                                grid: {
                                    drawOnChartArea: false,
                                },
                                ticks: {
                                    callback: function(value) {
                                        return Math.round(value) + ' TL';
                                    }
                                },
                                title: {
                                    display: true,
                                    text: 'Gelir (TL)'
                                }
                            },
                            x: {
                                ticks: {
                                    maxRotation: 45,
                                    minRotation: 0
                                }
                            }
                        },
                        interaction: {
                            intersect: false,
                            mode: 'index'
                        }
                    }
                });
            }
        });